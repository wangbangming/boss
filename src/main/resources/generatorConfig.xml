<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
    <!-- 引入配置文件 -->
    <properties resource="application.properties"/>

    <!-- 一个数据库一个context -->
    <context id="develop" defaultModelType="flat">
        <!-- 注释 -->
        <commentGenerator >
            <property name="suppressAllComments" value="true"/><!-- 是否取消注释 -->
            <property name="suppressDate" value="false" /> <!-- 是否生成注释代时间戳-->
        </commentGenerator>

        <!-- jdbc连接 -->
        <jdbcConnection driverClass="${spring.datasource.driver-class-name}"
                        connectionURL="${spring.datasource.url}" userId="${spring.datasource.username}"
                        password="${spring.datasource.password}" />

        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成实体类地址 dto -->
        <javaModelGenerator targetPackage="com.boss.entity.vo"
                            targetProject="${user.dir}/src/main/java" >
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否针对string类型的字段在set的时候进行trim调用 -->
            <property name="trimStrings" value="true"/>
            <property name="rootClass" value="com.boss.entity.vo.BaseEntity"/>
        </javaModelGenerator>

        <!-- 生成mapxml文件 mapper0001 -->
        <sqlMapGenerator targetPackage="mapper"
                         targetProject="${user.dir}/src/main/resources" >
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>

        <!-- 生成mapxml对应client，也就是接口dao -->
        <javaClientGenerator targetPackage="com.boss.dao"
                             targetProject="${user.dir}/src/main/java" type="XMLMAPPER" >
            <!-- 是否在当前路径下新加一层schema,eg：false路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>


         <table tableName="tb_intercept_url" enableCountByExample="false"
                enableDeleteByExample="false" enableSelectByExample="false"
                enableUpdateByExample="false">
            <!--tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
            是否生成 example类
             忽略列，不生成bean 字段-->
             <!--指定列的java数据类型-->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
         </table>

         <table tableName="tb_sidebar_menu" enableCountByExample="false"
                enableDeleteByExample="false" enableSelectByExample="false"
                enableUpdateByExample="false">
            <!--tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
            是否生成 example类
             忽略列，不生成bean 字段-->
             <!--指定列的java数据类型-->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
         </table>

         <table tableName="tb_supplier" enableCountByExample="false"
                enableDeleteByExample="false" enableSelectByExample="false"
                enableUpdateByExample="false">
            <!--tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
            是否生成 example类
             忽略列，不生成bean 字段-->
             <!--指定列的java数据类型-->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
         </table>

         <table tableName="tb_sys_role" enableCountByExample="false"
                enableDeleteByExample="false" enableSelectByExample="false"
                enableUpdateByExample="false">
            <!--tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
            是否生成 example类
             忽略列，不生成bean 字段-->
             <!--指定列的java数据类型-->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
         </table>

         <table tableName="tb_sys_user" enableCountByExample="false"
                enableDeleteByExample="false" enableSelectByExample="false"
                enableUpdateByExample="false">
            <!--tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
            是否生成 example类
             忽略列，不生成bean 字段-->
             <!--指定列的java数据类型-->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
         </table>

         <table tableName="tr_role_url" enableCountByExample="false"
                enableDeleteByExample="false" enableSelectByExample="false"
                enableUpdateByExample="false">
            <!--tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
            是否生成 example类
             忽略列，不生成bean 字段-->
             <!--指定列的java数据类型-->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
         </table>

         <table tableName="tr_sys_role_menu" enableCountByExample="false"
                enableDeleteByExample="false" enableSelectByExample="false"
                enableUpdateByExample="false">
            <!--tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
            是否生成 example类
             忽略列，不生成bean 字段-->
             <!--指定列的java数据类型-->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
         </table>

         <table tableName="tr_sys_user_role" enableCountByExample="false"
                enableDeleteByExample="false" enableSelectByExample="false"
                enableUpdateByExample="false">
            <!--tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
            是否生成 example类
             忽略列，不生成bean 字段-->
             <!--指定列的java数据类型-->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
         </table>

    </context>
</generatorConfiguration>